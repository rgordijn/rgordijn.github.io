{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","AnimatedCard","_ref","animation","digit","react_default","a","createElement","className","concat","StaticCard","_ref2","position","FlipUnitContainer","_ref3","previousDigit","shuffle","currentDigit","digit1","digit2","animation1","animation2","src_StaticCard","src_AnimatedCard","FlipClounter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","old_follower_count","oldDigit1","shuffle1","oldDigit2","shuffle2","digit3","oldDigit3","shuffle3","digit4","oldDigit4","shuffle4","digit5","oldDigit5","shuffle5","digit6","oldDigit6","shuffle6","updateFollowerCount","_this2","timerID","setInterval","clearInterval","_this3","new_follower_count","new_digits_arr","old_digits_arr","fetch","then","result","json","jsonResult","block","users","user","follower_count","console","log","split","length","unshift","setState","_this$state","src_FlipUnitContainer","React","Component","Header","ReactDOM","render","src_Header","src_FlipClounter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b5bdefc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n  \n// function component\nconst AnimatedCard = ({ animation, digit }) => {\n  return(\n    <div className={`flipCard ${animation}`}>\n      <span>{digit}</span>\n    </div>\n  );\n};\n\n// function component\nconst StaticCard = ({ position, digit }) => {\n  return(\n    <div className={position}>\n      <span>{digit}</span>\n    </div>\n  );\n};\n\n// function component\nconst FlipUnitContainer = ({ digit, previousDigit, shuffle }) => {\t\n  \n  //todo: add variable if it must go up or down\n\n  // assign digit values\n  let currentDigit = digit;\n\n  // shuffle digits\n  const digit1 = shuffle \n    ? previousDigit \n    : currentDigit;\n  const digit2 = !shuffle \n    ? previousDigit \n    : currentDigit;\n    \n  // shuffle animations\n  const animation1 = shuffle ? 'fold'  : 'unfold';\n  const animation2 = !shuffle ? 'fold' : 'unfold';\n\n  return(\n    <div className={'flipUnitContainer'}>\n      <StaticCard \n        position={'upperCard'} \n        digit={currentDigit} \n        />\n      <StaticCard \n        position={'lowerCard'} \n        digit={previousDigit} \n        />\n      <AnimatedCard \n        digit={digit1}\n        animation={animation1}\n        />\n      <AnimatedCard \n        digit={digit2}\n        animation={animation2}\n        />\n    </div>\n  );\n};\n\n// const FlipUnitContainerGenerator = ({ new_digits, old_digits }) => {\n\n//   //todo:add zero if smaller then 100k\n//   if(new_digits.length <= 5)\n//     new_digits.unshift(0); old_digits.unshift(0);\n\n//     let flipUnits = [] \n//   new_digits.map((number, i) =>\n//     {\n//       const shuffle = number !== old_digits[i];\n//       flipUnits.push(<FlipUnitContainer key={i} digit={number} previousDigit={old_digits[i]} shuffle={ shuffle }  />);\n//     }\n//   );\n\n//   return (\n//     flipUnits\n//   );\n\n// };\n\n// class component\nclass FlipClounter extends React.Component {\n\t\n  constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n      old_follower_count: 0,\n      digit1: 0,\n      oldDigit1: 0,\n      shuffle1: 0,\n      digit2: 0,\n      oldDigit2: 0,\n      shuffle2: 0,\n      digit3: 0,\n      oldDigit3: 0,\n      shuffle3: 0,\n      digit4: 0,\n      oldDigit4: 0,\n      shuffle4: 0,\n      digit5: 0,\n      oldDigit5: 0,\n      shuffle5: 0,\n      digit6: 0,\n      oldDigit6: 0,\n      shuffle6: 0\n    };\n    this.updateFollowerCount();\n\t}\n  \n\tcomponentDidMount() {\n\t\tthis.timerID = setInterval(\n\t\t\t() => this.updateFollowerCount(),\n\t\t\t30000\n\t\t);\n\t}\n  \n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n  \n\tupdateFollowerCount() {\n    let new_follower_count = 0;\n    let new_digits_arr = [];\n    let old_digits_arr = []\n\t\t// get new followercount\n    fetch('https://www.instagram.com/web/search/topsearch/?query=eigenhuisentuin').then((result) => {\n            return result.json();\n        }).then((jsonResult) => {\n\n            const block = jsonResult.users[0].user;\n            new_follower_count = block.follower_count;\n            console.log(this.state.old_follower_count);\n            // sperate digits\n            new_digits_arr = (\"\"+new_follower_count).split(\"\");\n            old_digits_arr = (\"\"+this.state.old_follower_count).split(\"\");\n\n            while(new_digits_arr.length !== 6)\n              new_digits_arr.unshift(0);\n              \n            while(old_digits_arr.length !== 6)\n              old_digits_arr.unshift(0);\n              \n              if(new_digits_arr[0] !== old_digits_arr[0])\n              {\n                this.setState({\n                    digit1: new_digits_arr[0],\n                    oldDigit1: old_digits_arr[0],\n                    shuffle1: true\n                });\n              }\n\n              if(new_digits_arr[1] !== old_digits_arr[1])\n              {\n                this.setState({\n                    digit2: new_digits_arr[1],\n                    oldDigit2: old_digits_arr[1],\n                    shuffle2: true\n                });\n              }\n\n              if(new_digits_arr[2] !== old_digits_arr[2])\n              {\n                this.setState({\n                    digit3: new_digits_arr[2],\n                    oldDigit3: old_digits_arr[2],\n                    shuffle3: true\n                });\n              }\n\n              if(new_digits_arr[3] !== old_digits_arr[3])\n              {\n                this.setState({\n                    digit4: new_digits_arr[3],\n                    oldDigit4: old_digits_arr[3],\n                    shuffle4: true\n                });\n              }\n\n              if(new_digits_arr[4] !== old_digits_arr[4])\n              {\n                this.setState({\n                    digit5: new_digits_arr[4],\n                    oldDigit5: old_digits_arr[4],\n                    shuffle5: true\n                });\n              }\n\n              if(new_digits_arr[5] !== old_digits_arr[5])\n              {\n                this.setState({\n                    digit6: new_digits_arr[5],\n                    oldDigit6: old_digits_arr[5],\n                    shuffle6: true\n                });\n              }\n\n            if(new_follower_count !== this.state.old_follower_count){\n                this.setState({\n                    old_follower_count: new_follower_count,\n                });\n              }\n        })\n    \n    \n\n\t\t\n\t}\n  \n\trender() {\n    \n    // state object destructuring\n\t\tconst { \n      digit1,\n      oldDigit1,\n      shuffle1,\n      digit2,\n      oldDigit2,\n      shuffle2,\n      digit3,\n      oldDigit3,\n      shuffle3,\n      digit4,\n      oldDigit4,\n      shuffle4,\n      digit5,\n      oldDigit5,\n      shuffle5,\n      digit6,\n      oldDigit6,\n      shuffle6\n    } = this.state;\n\n    \n    return(\n        <div className={'flipClock'}>\n          <FlipUnitContainer digit={digit1} previousDigit={oldDigit1} shuffle={shuffle1}  />\n          <FlipUnitContainer digit={digit2} previousDigit={oldDigit2} shuffle={shuffle2}  />\n          <FlipUnitContainer digit={digit3} previousDigit={oldDigit3} shuffle={shuffle3}  />\n          <FlipUnitContainer digit={digit4} previousDigit={oldDigit4} shuffle={shuffle4}  />\n          <FlipUnitContainer digit={digit5} previousDigit={oldDigit5} shuffle={shuffle5}  />\n          <FlipUnitContainer digit={digit6} previousDigit={oldDigit6} shuffle={shuffle6}  />\n        </div>\n\t\t);\n\t}\n}\n\n// function component\nconst Header = () => {\n  return(\n    <header>\n      <h1>@eigenhuisentuin instagram</h1>\n    </header>\n  );\n};\n\n// function component\nconst App = () => {\n  return (\n    <div>\n      <Header />       \n      <FlipClounter />\n    </div>\n  );\n};\n\n\n  \n  ReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  );\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}